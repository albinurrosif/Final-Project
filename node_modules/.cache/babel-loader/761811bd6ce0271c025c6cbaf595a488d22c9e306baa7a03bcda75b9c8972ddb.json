{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.outOfContainerBounds = exports.doesOverlap = exports.randomIntFromInterval = exports.randomFloatFromInterval = void 0;\nvar randomFloatFromInterval = function (min, max) {\n  return parseFloat((Math.random() * (max - min) + min).toFixed(4));\n};\nexports.randomFloatFromInterval = randomFloatFromInterval;\nvar randomIntFromInterval = function (min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\nexports.randomIntFromInterval = randomIntFromInterval;\n// https://stackoverflow.com/a/12067046/744230\nvar doesOverlap = function (rect1, rect2, containerRect) {\n  if (rect1.right > containerRect.right) {\n    return !(rect1.right < rect2.left || rect1.left > rect2.right || rect1.bottom < rect2.top || rect1.top > rect2.bottom) || rect1.right - containerRect.right > rect2.left;\n  }\n  if (rect2.right > containerRect.right) {\n    return !(rect1.right < rect2.left || rect1.left > rect2.right || rect1.bottom < rect2.top || rect1.top > rect2.bottom) || rect2.right - containerRect.right > rect1.left;\n  }\n  return !(rect1.right < rect2.left || rect1.left > rect2.right || rect1.bottom < rect2.top || rect1.top > rect2.bottom);\n};\nexports.doesOverlap = doesOverlap;\nvar outOfContainerBounds = function (childRect, containerRect) {\n  return childRect.bottom > containerRect.bottom;\n};\nexports.outOfContainerBounds = outOfContainerBounds;\n// appending `|| childRect.right > containerRect.right` would disallow overflowing\n// child elements from overflowing the right container edge. but that excludes a stripe\n// on the right container edge of the min element width from being filled, which may look\n// unnatural. so that's why we allow right overflow","map":{"version":3,"mappings":";;;;;;AAAO,IAAMA,uBAAuB,GAAG,UAACC,GAAW,EAAEC,GAAW;EAC9D,iBAAU,CAAC,CAACC,IAAI,CAACC,MAAM,EAAE,IAAIF,GAAG,GAAGD,GAAG,CAAC,GAAGA,GAAG,EAAEI,OAAO,CAAC,CAAC,CAAC,CAAC;AAA1D,CAA0D;AAD/CC,+BAAuB;AAG7B,IAAMC,qBAAqB,GAAG,UAACN,GAAW,EAAEC,GAAW;EAC5D,OAAOC,IAAI,CAACK,KAAK,CAACL,IAAI,CAACC,MAAM,EAAE,IAAIF,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC;AAC1D,CAAC;AAFYK,6BAAqB;AAIlC;AACO,IAAMG,WAAW,GAAG,UAACC,KAAiB,EAAEC,KAAiB,EAAEC,aAAyB;EACzF,IAAIF,KAAK,CAACG,KAAK,GAAGD,aAAa,CAACC,KAAK,EAAE;IACrC,OACE,EACEH,KAAK,CAACG,KAAK,GAAGF,KAAK,CAACG,IAAI,IACxBJ,KAAK,CAACI,IAAI,GAAGH,KAAK,CAACE,KAAK,IACxBH,KAAK,CAACK,MAAM,GAAGJ,KAAK,CAACK,GAAG,IACxBN,KAAK,CAACM,GAAG,GAAGL,KAAK,CAACI,MAAM,CACzB,IAAIL,KAAK,CAACG,KAAK,GAAGD,aAAa,CAACC,KAAK,GAAGF,KAAK,CAACG,IAAI;;EAIvD,IAAIH,KAAK,CAACE,KAAK,GAAGD,aAAa,CAACC,KAAK,EAAE;IACrC,OACE,EACEH,KAAK,CAACG,KAAK,GAAGF,KAAK,CAACG,IAAI,IACxBJ,KAAK,CAACI,IAAI,GAAGH,KAAK,CAACE,KAAK,IACxBH,KAAK,CAACK,MAAM,GAAGJ,KAAK,CAACK,GAAG,IACxBN,KAAK,CAACM,GAAG,GAAGL,KAAK,CAACI,MAAM,CACzB,IAAIJ,KAAK,CAACE,KAAK,GAAGD,aAAa,CAACC,KAAK,GAAGH,KAAK,CAACI,IAAI;;EAIvD,OAAO,EACLJ,KAAK,CAACG,KAAK,GAAGF,KAAK,CAACG,IAAI,IACxBJ,KAAK,CAACI,IAAI,GAAGH,KAAK,CAACE,KAAK,IACxBH,KAAK,CAACK,MAAM,GAAGJ,KAAK,CAACK,GAAG,IACxBN,KAAK,CAACM,GAAG,GAAGL,KAAK,CAACI,MAAM,CACzB;AACH,CAAC;AA7BYT,mBAAW;AA+BjB,IAAMW,oBAAoB,GAAG,UAACC,SAAqB,EAAEN,aAAyB;EACnF,gBAAS,CAACG,MAAM,GAAGH,aAAa,CAACG,MAAM;AAAvC,CAAuC;AAD5BT,4BAAoB;AAEjC;AACA;AACA;AACA","names":["randomFloatFromInterval","min","max","Math","random","toFixed","exports","randomIntFromInterval","floor","doesOverlap","rect1","rect2","containerRect","right","left","bottom","top","outOfContainerBounds","childRect"],"sources":["../src/util.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}